class Solution {
    public String longestPalindrome(String s) {
        if (s.length() <= 1) {
            return s;
        }

        int max_length = 1;
        int start = 0;
        int end = 0;
        boolean[][] dp = new boolean[s.length()][s.length()];

        for (int i = 0; i < s.length(); i++) {
            dp[i][i] = true; 
            for (int j = 0; j < i; j++) {
                if (s.charAt(i) == s.charAt(j) && ((i - j <= 2) || (dp[j+1][i-1] == true))) {
                    dp[j][i] = true;
                    if (i - j + 1 > max_length) {
                        max_length = i - j + 1;
                        start = j;
                        end = i;
                    }
                }
            }
        }

        return s.substring(start, end + 1);
    }
}
